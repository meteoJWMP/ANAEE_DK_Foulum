print(j)
print(a[j,"min"])
print(a[j,"max"])
k=runif(n = 10000,min = a[j,3],max = a[j,4])
test=cbind(k,test)
}
hist(test[,1])
max(test[,1])
k=runif(n = 10000,min = a[j,3],max = a[j,4])
test=cbind(k,test)
k
test=NULL
for(j in 1:nrow(a)){
print(j)
print(a[j,"min"])
print(a[j,"max"])
k=runif(n = 10000,min = a[j,3],max = a[j,4])
test=cbind(k,test)
}
hist(test[,1])
max(test[,1])
max
test=NULL
for(j in 1:nrow(a)){
print(j)
print(a[j,"min"])
print(a[j,"max"])
k=runif(n = 100000,min = a[j,3],max = a[j,4])
test=cbind(k,test)
}
hist(test[,1])
max(test[,1])
max(test[,2])
max(test[2,])
max(test[1,])
k
max(k)
j=1
k=runif(n = 100000,min = a[j,3],max = a[j,4])
max(k)
hist(k)
str(k)
cbind(k,k)
m <- cbind(k,k)
m[1]
m[1,]
m[,1]
max(m[,1])
min(m[,1])
test=NULL
for(j in 1:nrow(a)){
print(j)
print(a[j,"min"])
print(a[j,"max"])
k=runif(n = 100000,min = a[j,3],max = a[j,4])
test=cbind(test,k)
}
max(test[1,])
max(test[,1])
hist(test[,1])
max(test[,2])
hist(test[,1])
max(test[,1])
max(test[,2])
fRequent::plot_per_column(test)
devtools::install_github(repo="jeroenpullens/fRequent",subdir = "fRequent")
names <- c("gram_KExt","gram_MaxGr","gram_MortFrLvmsleaf","gram_TOpt1Gr","gram_TOpt2Gr","gram_TmaxGr","eric_KExt","eric_MaxGr","eric_MortFrLvmsleaf","eric_TOpt1Gr","eric_TOpt2Gr","eric_TmaxGr","humm_MaxGr","humm_MortFrAcroshoot","humm_TMaxGr","humm_TOpt1Gr","humm_TOpt2Gr","lawn_MaxGr","lawn_MortFrAcroshoot","lawn_TMaxGr","lawn_TOpt1Gr","lawn_TOpt2Gr","holl_MaxGr","holl_MortFrAcroshoot","holl_TMaxGr","holl_TOpt1Gr","holl_TOpt2Gr","sd_NEE1","sd_WTD1")
values<-c(0.5,70,0.08,12,20,25,0.8,60,0.04,5,14,25,45,0.04,25,14,18,50,0.04,25,14,18,60,0.08,25,10,18,5,0.1)
min<-   c(0.1,0.1,0.1,0.6,0.6,0.6,0.1,0.1,0.1,0.6,0.6,0.6,0.1,0.1,0.6,0.6,0.6,0.1,0.1,0.6,0.6,0.6,0.1,0.6,0.6,0.6,0.6,0.1,0.1)*values
max<-  c(2,10,5,1.4,1.4,1.4,1.25,10,5,1.4,1.4,1.4,5,5,1.4,1.4,2.2,5,5,1.4,1.4,2.2,5,5,1.4,1.4,2.2,3,5)*values
a <- data.frame(names,values,min,max)
test=NULL
for(j in 1:nrow(a)){
print(j)
print(a[j,"min"])
print(a[j,"max"])
k=runif(n = 100000,min = a[j,3],max = a[j,4])
test=cbind(test,k)
}
fRequent::plot_per_column(test,hist=TRUE)
test=NULL
for(j in 1:nrow(a)){
print(j)
print(a[j,"min"])
print(a[j,"max"])
k=runif(n = 1000,min = a[j,3],max = a[j,4])
test=cbind(test,k)
}
a <- data.frame(names,values,min,max)
test=NULL
for(j in 1:nrow(a)){
k=runif(n = 1000,min = a[j,3],max = a[j,4])
test=cbind(test,k)
}
fRequent::plot_per_column(test,hist=TRUE)
hist(test[,1])
hist(test[,1],breaks = 1000)
hist(test[,1],breaks = 100)
hist(test[,1],breaks = 10)
hist(test[,1],breaks = 1)
hist(test[,1],breaks = 5)
min(test[â˜¼,1])
min(test[,1])
max(test[,1])
nrow(test)
test[,1]
test[1,]
library(hydroGOF)
hydroGOF::rmse()
sim <- 1:10
obs <- 1:10
gof(sim, obs)
sim <- 1:10
obs <- 1:10
a <- gof(sim, obs)
a
str(a)
which(a=="RMSE")
a[1]
a["RMSE"]
a["RMSE",]
a["NSE",]
b <- a["RMSE",]
b
b+1
sim <- 1:10
obs <- 1:10
a <- gof(sim, obs)["RMSE",1]
a
load("~/_Models/AgMIP_wheat/ROTS_step2/Daisy_rots_step2/CALIBRATION_AGMIP_CALIBRATION_Biomass_yield.Rdata")
fit.Biomass$optim$bestmem
600/50
600/20
switch("b", a = 1, b = , c = 3)
?switch
switch(1, invisible(pi), pi)
switch("lizard", lizard=,snake=,gator="reptile", frog=,toad="amphibian")
switch("frog", lizard=,snake=,gator="reptile", frog=,toad="amphibian")
Sys.setlocale("LC_MESSAGES", 'en_GB.UTF-8')
Sys.setenv(LANG = "en_US.UTF-8")
RVI <- read.csv("~/_Models/_28399 AnaEE/Licor8100/Data/RVI_2017_Festulolium.csv",sep=";",as.is=T)
RVI$Date <- as.Date(RVI$Date,format="%d/%m/%Y")
RVI$Date <- RVI$Date+365
plot(RVI,type="b",ylim=c(0,30))
Sys.setenv("LANGUAGE"="EN")
RVI <- read.csv("~/_Models/_28399 AnaEE/Licor8100/Data/RVI_2017_Festulolium.csv",sep=";",as.is=T)
RVI$Date <- as.Date(RVI$Date,format="%d/%m/%Y")
RVI$Date <- RVI$Date+365
plot(RVI,type="b",ylim=c(0,30))
setwd("D:/DK_uncertainty/Watem_in")
library(raster)
library(stringr)
ktc_combinations <- read.csv(file = "D:\\DK_uncertainty\\Watem_in\\ktc_NSE_median.csv",header = T,sep = ";")
setwd("D:/DK_uncertainty/Watem_in")
ktc_combinations <- read.csv(file = "D:\\DK_uncertainty\\Watem_in\\ktc_NSE_median.csv",header = T,sep = ";")
i=1
## Werodep
werodep <- raster(paste("D:\\DK_uncertainty\\Bornholm\\Watem_out\\DK_",ktc_combinations$Combi[i],sep="","_Werodep_in_m.rst")) ### Reads watem Werodep output with index based on ktc_combinations dataframe column Combi. When Sep="" is used, there are no spaces in filenames (paste0 would be an alternative)
## Werodep
werodep <- raster(paste("D:\\DK_uncertainty\\Bornholm\\Watem_out\\Bornholm_",ktc_combinations$Combi[i],sep="","_Werodep_in_m.rst")) ### Reads watem Werodep output with index based on ktc_combinations dataframe column Combi. When Sep="" is used, there are no spaces in filenames (paste0 would be an alternative)
werodep
plot(werodep)
values(werodep)[values(werodep) == 0] = NA   ### Zeros to NoData
plot(werodep)
tha_wt_werodep <- wt_werodep*12000 ## into t/ha/a
library(raster)
?stack
stack=raster()
stack_test=raster()
for(i in 1:nrow(ktc_combinations)){
## Werodep
werodep <- raster(paste("D:\\DK_uncertainty\\Bornholm\\Watem_out\\Bornholm_",ktc_combinations$Combi[i],sep="","_Werodep_in_m.rst")) ### Reads watem Werodep output with index based on ktc_combinations dataframe column Combi. When Sep="" is used, there are no spaces in filenames (paste0 would be an alternative)
values(werodep)[values(werodep) == 0] = NA   ### Zeros to NoData
tha_werodep <- werodep*12000 ## into t/ha/a
stack_test=stack(stack_test,tha_werodep)
gc() ## garbage collection
}
# for(i in 1:nrow(ktc_combinations)){
for(i in 1:2){
## Werodep
print(i)
werodep <- raster(paste("D:\\DK_uncertainty\\Bornholm\\Watem_out\\Bornholm_",ktc_combinations$Combi[i],sep="","_Werodep_in_m.rst")) ### Reads watem Werodep output with index based on ktc_combinations dataframe column Combi. When Sep="" is used, there are no spaces in filenames (paste0 would be an alternative)
values(werodep)[values(werodep) == 0] = NA   ### Zeros to NoData
tha_werodep <- werodep*12000 ## into t/ha/a
stack_test=stack(stack_test,tha_werodep)
gc() ## garbage collection
}
stack_test=raster()
# for(i in 1:nrow(ktc_combinations)){
for(i in 1:2){
## Werodep
print(i)
werodep <- raster(paste("D:\\DK_uncertainty\\Bornholm\\Watem_out\\Bornholm_",ktc_combinations$Combi[i],sep="","_Werodep_in_m.rst")) ### Reads watem Werodep output with index based on ktc_combinations dataframe column Combi. When Sep="" is used, there are no spaces in filenames (paste0 would be an alternative)
values(werodep)[values(werodep) == 0] = NA   ### Zeros to NoData
tha_werodep <- werodep*12000 ## into t/ha/a
stack_test=stack(stack_test,tha_werodep)
gc() ## garbage collection
}
stack_test
stack_test=stack()
# for(i in 1:nrow(ktc_combinations)){
